# make.contigs(file=resgrad-ul.files, insert=30, deltaq=4, processors=8)
# summary.seqs(fasta=resgrad-ul.trim.contigs.fasta, processors=8)
# screen.seqs(fasta=resgrad-ul.trim.contigs.fasta, group=resgrad-ul.contigs.groups,  summary=resgrad-ul.trim.contigs.summary, maxambig=0, maxlength=275, processors=8)
# unique.seqs(fasta=resgrad-ul.trim.contigs.good.fasta)
# summary.seqs(fasta=resgrad-ul.trim.contigs.good.unique.fasta, name=resgrad-ul.trim.contigs.good.names, processors=8)
# count.seqs(name=resgrad-ul.trim.contigs.good.names, group=resgrad-ul.contigs.good.groups)
# summary.seqs(fasta=resgrad-ul.trim.contigs.good.unique.fasta, count=resgrad-ul.trim.contigs.good.count_table, processors=8)
# pcr.seqs(fasta=silva.nr_v132.align, start=11894, end=25319, keepdots=F, processors=8) 
# rename.file(input=silva.nr_v132.pcr.align, new=silva.v4.fasta)
align.seqs(fasta=resgrad-ul.trim.contigs.good.unique.fasta, reference=silva.v4.fasta, flip=F, processors=8)
summary.seqs(fasta=resgrad-ul.trim.contigs.good.unique.align, processors=8)
summary.seqs(fasta=resgrad-ul.trim.contigs.good.unique.flip.accnos, processors=8)
screen.seqs(fasta=resgrad-ul.trim.contigs.good.unique.align, count=resgrad-ul.trim.contigs.good.count_table, minlength=250, optimize=start-end-minlength, maxhomop=8, processors=8)
count.groups(count=resgrad-ul.trim.contigs.good.good.count_table)
summary.seqs(fasta=resgrad-ul.trim.contigs.good.unique.good.align, processors=8)
filter.seqs(fasta=resgrad-ul.trim.contigs.good.unique.good.align, vertical=T, trump=.)
summary.seqs(fasta=resgrad-ul.trim.contigs.good.unique.good.filter.fasta,count=resgrad-ul.trim.contigs.good.good.count_table, processors=8)
screen.seqs(fasta=resgrad-ul.trim.contigs.good.unique.good.filter.fasta, count=resgrad-ul.trim.contigs.good.good.count_table, minlength=250, optimize=start-end-minlength, maxhomop=8, processors=8)
count.groups(count=resgrad-ul.trim.contigs.good.good.good.count_table)
summary.seqs(fasta=resgrad-ul.trim.contigs.good.unique.good.filter.good.fasta, processors=8)
unique.seqs(fasta=resgrad-ul.trim.contigs.good.unique.good.filter.good.fasta, count=resgrad-ul.trim.contigs.good.good.good.count_table)
summary.seqs(fasta=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.fasta, count=resgrad-ul.trim.contigs.good.unique.good.filter.good.count_table, processors=8)
pre.cluster(fasta=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.fasta, count=resgrad-ul.trim.contigs.good.unique.good.filter.good.count_table, diffs=2, processors=1)
summary.seqs(fasta=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.fasta, count=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.count_table, processors=8)
chimera.uchime(fasta=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.fasta, reference=silva.gold.align, processors=8)
remove.seqs(fasta=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.fasta, count=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.count_table, accnos=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.ref.uchime.accnos)
summary.seqs(fasta=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.fasta, count=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.count_table, processors=8)
classify.seqs(fasta=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.fasta, count=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.count_table, reference=silva.nr_v128.align, taxonomy=silva.nr_v128.tax, cutoff=50, probs=F, processors=8)
remove.lineage(fasta=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.fasta, count=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.count_table, taxonomy=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.nr_v128.wang.taxonomy, taxon=Archaea-Chloroplast-Mitochondria-Eukaryota-unknown)
summary.seqs(fasta=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.pick.fasta, count=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.pick.count_table, processors=8)
cluster.split(fasta=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.pick.fasta, count=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.pick.count_table, taxonomy=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.nr_v128.wang.pick.taxonomy, method=opti, splitmethod=classify, taxlevel=4, cutoff=0.03, processors=8)
make.shared(list=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.pick.opti_mcc.unique_list.list, count=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.pick.count_table, label=0.03)
classify.otu(list=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.pick.opti_mcc.unique_list.list, count=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.pick.count_table, taxonomy=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.nr_v128.wang.pick.taxonomy, label=0.03)
system(cp ./resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.pick.opti_mcc.unique_list.shared ./resgrad-ul.bac.final.shared)
system(cp ./resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.pick.opti_mcc.unique_list.0.03.cons.taxonomy ./resgrad-ul.bac.final.0.03.taxonomy)
system(cp ./resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.pick.opti_mcc.unique_list.0.03.cons.tax.summary ./resgrad-ul.bac.final.0.03.tax.summary)
get.oturep(list=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.pick.opti_mcc.unique_list.list, fasta=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.pick.fasta, count=resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.pick.count_table, method=abundance, label=0.03)
system(cp ./resgrad-ul.trim.contigs.good.unique.good.filter.good.unique.precluster.pick.pick.opti_mcc.unique_list.0.03.rep.fasta ./resgrad-ul.bac.final.0.03.rep.fasta)
