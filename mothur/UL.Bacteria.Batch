make.contigs(file=UL.files, insert=30, deltaq=4, processors=10)
summary.seqs(fasta=UL.trim.contigs.fasta, processors=10)
screen.seqs(fasta=UL.trim.contigs.fasta, group=UL.contigs.groups,  summary=UL.trim.contigs.summary, maxambig=0, maxlength=300, processors=10)
unique.seqs(fasta=UL.trim.contigs.good.fasta)
summary.seqs(fasta=UL.trim.contigs.good.unique.fasta, name=UL.trim.contigs.good.names, processors=10)
count.seqs(name=UL.trim.contigs.good.names, group=UL.contigs.good.groups, processors=1)
summary.seqs(fasta=UL.trim.contigs.good.unique.fasta, count=UL.trim.contigs.good.count_table, processors=10)
align.seqs(fasta=UL.trim.contigs.good.unique.fasta, reference=silva.v4.fasta, flip=T, processors=10)
summary.seqs(fasta=UL.trim.contigs.good.unique.align, count=UL.trim.contigs.good.count_table, processors=10)
summary.seqs(fasta=UL.trim.contigs.good.unique.flip.accnos, processors=10)
screen.seqs(fasta=UL.trim.contigs.good.unique.align, count=UL.trim.contigs.good.count_table, minlength=250, maxhomop=8, processors=10)
count.groups(count=UL.trim.contigs.good.good.count_table)
summary.seqs(fasta=UL.trim.contigs.good.unique.align, processors=10)
filter.seqs(fasta=UL.trim.contigs.good.unique.good.align, vertical=T, trump=.)
summary.seqs(fasta=UL.trim.contigs.good.unique.good.filter.fasta,count=UL.trim.contigs.good.good.count_table, processors=10)
unique.seqs(fasta=UL.trim.contigs.good.unique.good.filter.fasta, count=UL.trim.contigs.good.good.count_table)
summary.seqs(fasta=UL.trim.contigs.good.unique.good.filter.unique.fasta, count=UL.trim.contigs.good.unique.good.filter.count_table, processors=10)
pre.cluster(fasta=UL.trim.contigs.good.unique.good.filter.unique.fasta, count=UL.trim.contigs.good.unique.good.filter.count_table, diffs=2, processors=1)
summary.seqs(fasta=UL.trim.contigs.good.unique.good.filter.unique.precluster.fasta, count=UL.trim.contigs.good.unique.good.filter.unique.precluster.count_table, processors=10)
chimera.uchime(fasta=UL.trim.contigs.good.unique.good.filter.unique.precluster.fasta, reference=silva.gold.ng.fasta, processors=10)
remove.seqs(fasta=UL.trim.contigs.good.unique.good.filter.unique.precluster.fasta, count=UL.trim.contigs.good.unique.good.filter.unique.precluster.count_table, accnos=UL.trim.contigs.good.unique.good.filter.unique.precluster.uchime.accnos)
summary.seqs(fasta=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta, count=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.count_table, processors=10)
summary.seqs(fasta=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta, count=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.count_table, processors=10)
classify.seqs(fasta=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta, count=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.count_table, reference=silva.bacteria.fasta, taxonomy=silva.bacteria.silva.tax, cutoff=80, probs=f, processors=10)
remove.lineage(fasta=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta, count=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.count_table, taxonomy=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.silva.wang.taxonomy, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota)
remove.seqs(accnos=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.silva.wang.flip.accnos, fasta=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta, count=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.count_table, taxonomy=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.silva.wang.pick.taxonomy)
summary.seqs(fasta=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta, count=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.count_table, processors=10)
cluster.split(fasta=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta, count=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.count_table, taxonomy=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.silva.wang.pick.taxonomy, splitmethod=classify, taxlevel=3, processors=10, large=T)
make.shared(list=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.an.unique_list.list, count=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.count_table, label=unique-0.03-0.05-0.10)
classify.otu(list=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.an.unique_list.list, count=UL.trim.contigs.good.unique.good.filter.unique.precluster.uchime.pick.pick.pick.count_table, taxonomy=UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.silva.wang.pick.taxonomy, label=unique-0.03-0.05-0.10)
system(cp ./UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.an.unique_list.shared ./UL.bac.final.shared)
system(cp ./UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.an.unique_list.0.03.cons.taxonomy ./UL.bac.final.0.03.taxonomy)
system(cp ./UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.an.unique_list.0.03.cons.tax.summary ./UL.bac.final.0.03.tax.summary)
system(cp ./UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.an.unique_list.0.05.cons.taxonomy ./UL.bac.final.0.05.taxonomy)
system(cp ./UL.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.an.unique_list.0.05.cons.tax.summary ./UL.bac.final.0.05.tax.summary)
